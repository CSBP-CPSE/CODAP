
r.define(["Api/util/string",
		  "Api/util/array",
		  "Api/xml/xmlNode"],

	function (String,
			  Array,
			  XmlNode) {

	    return { 
			Changeset_Create : function() {
				var root = new XmlNode("osm");
				var comment = "This changeset was generated by the Crowdsourced Open Data Acquisition Platform (CODAP), an experimental application developed by the Centre for Special Business Projects (CSBP-CPSE). More info on the github page (https://github.com/CSBP-CPSE/CODAP)";
				
				var node = root.AddChild(new XmlNode("changeset", { "version":"0.6", "generator":"CODAP" }));
				
				node.AddChild(new XmlNode("tag", { "k":"created_by", "v":"CODAP 0.3" }));
				node.AddChild(new XmlNode("tag", { "k":"comment", "v":comment }));
				
				return root.ToXml();
			},
				
			Changeset_Modify_WayTags : function(chgId, f) {
				var prop = f.getProperties();
				
				var root = new XmlNode("osmChange", { version:"0.6", generator:"CODAP" });
				
				root.AddChild(new XmlNode("create"));
				
				var node = root.AddChild(new XmlNode("modify"));
				var way = node.AddChild(new XmlNode("way", { "id":prop.id, "version":prop.meta.version, "changeset":chgId }));
				
				root.AddChild(new XmlNode("delete", { "if-unused":true }));
				
				Array.ForEach(f.nodes, function(nd){
					way.AddChild(new XmlNode("nd", { "ref":nd }));
				});
				
				for (var k in prop.tags) {
					way.AddChild(new XmlNode("tag", { "k":k, "v":prop.tags[k] }));
				}
				
				return root.ToXml();
			}
		}
	});